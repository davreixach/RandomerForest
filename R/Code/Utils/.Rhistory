} else{
istest <- F
}
f <- file(paste(inPath, "data/", dataSet, ".data", sep = ""), open = "r")
l <- readLines(f, n = 1)
nCols <- length(strsplit(l, ",")[[1]])
f <- file(paste(inPath,"delimiter/",dataSet,".delimiter",sep = ""), open = "r")
dlm <- readLines(f, n = 1)
if (dlm == "\\t") {
dlm <- "\t"
}
f <- file(paste(inPath,"binary/",dataSet,".bin",sep = ""), open = "r")
l <- readLines(f, n = 1)
if (length(l) > 0) {
binidx <- lapply(strsplit(l, ","), as.integer)[[1]] + 1
} else {
binidx <- NULL
}
f <- file(paste(inPath,"categorical/",dataSet,".cat",sep = ""), open = "r")
l <- readLines(f, n = 1)
if (length(l) > 0) {
catidx <- lapply(strsplit(l, ","), as.integer)[[1]] + 1
} else {
catidx <- NULL
}
f <- file(paste(inPath,"ordinal/",dataSet,".ord",sep = ""), open = "r")
l <- readLines(f)
nOrd <- length(l)
if (nOrd > 0) {
ordmap <- strsplit(l, " ")
ordidx <- rep(0, nOrd)
for (i in 1:nOrd) {
ordidx[i] <- as.integer(ordmap[[i]][1]) + 1
}
} else {
ordidx <- NULL
}
f <- file(paste(inPath,"label/",dataSet,".label",sep = ""), open = "r")
l <- readLines(f, n = 1)
if (length(l) > 0) {
labelidx <- lapply(strsplit(l, ","), as.integer)[[1]] + 1
} else {
labelidx <- NULL
}
f <- file(paste(inPath,"remove/",dataSet,".remove",sep = ""), open = "r")
l <- readLines(f, n = 1)
if (length(l) > 0) {
removeidx <- lapply(strsplit(l, ","), as.integer)[[1]] + 1
} else {
removeidx <- NULL
}
# specify data type for each column
colClass <- rep("numeric", nCols)
colClass[binidx] <- "factor"
colClass[catidx] <- "factor"
colClass[ordidx] <- "factor"
colClass[labelidx] <- "factor"
colClass[removeidx] <- "factor"
df <- read.table(paste(inPath, "data/", dataSet, ".data", sep = ""), sep = dlm, colClasses = colClass, na.strings = missing)
metadata <- list()
metadata$nominal <- c(binidx,catidx)
if (!is.null(metadata$nominal)) {
metadata$nominal <- sort(metadata$nominal)
}
metadata$label <- labelidx
metadata$ordinal <- ordmap
metadata$remove <- removeidx
save(df, metadata, file = paste(outPath,dataSet,".RData",sep = ""))
if (istest) {
df <- read.table(paste(inPath, "data/", dataSet, ".test.data", sep = ""), sep = dlm, colClasses = colClass, na.strings = missing)
save(df, metadata, file = paste(outPath,dataSet,".test.RData",sep = ""))
}
}
?close
set.seed(123)
# con <- file(inFile, open="r")
inPath <- "/Users/tyler/Benchmarks/Data/uci/"
outPath <- "/Users/tyler/Benchmarks/Data/uci/RData/"
contents.all <- list.files(paste(inPath,"data/",sep = ""))
contents.notest <- contents.all[!grepl(".test",contents.all)]
# loop through datasets
for (fileName in contents.notest) {
dataSet <- strsplit(fileName,"\\.")[[1]][1]
print(dataSet)
f <- file(paste(inPath,"missing/",dataSet,".missing",sep = ""), open = "r")
missing <- readLines(f, n = 1)
close(f)
if (paste(dataSet,".test.data",sep = "") %in% contents.all) {
istest <- T
} else{
istest <- F
}
f <- file(paste(inPath, "data/", dataSet, ".data", sep = ""), open = "r")
l <- readLines(f, n = 1)
close(f)
nCols <- length(strsplit(l, ",")[[1]])
f <- file(paste(inPath,"delimiter/",dataSet,".delimiter",sep = ""), open = "r")
dlm <- readLines(f, n = 1)
close(f)
if (dlm == "\\t") {
dlm <- "\t"
}
f <- file(paste(inPath,"binary/",dataSet,".bin",sep = ""), open = "r")
l <- readLines(f, n = 1)
close(f)
if (length(l) > 0) {
binidx <- lapply(strsplit(l, ","), as.integer)[[1]] + 1
} else {
binidx <- NULL
}
f <- file(paste(inPath,"categorical/",dataSet,".cat",sep = ""), open = "r")
l <- readLines(f, n = 1)
close(f)
if (length(l) > 0) {
catidx <- lapply(strsplit(l, ","), as.integer)[[1]] + 1
} else {
catidx <- NULL
}
f <- file(paste(inPath,"ordinal/",dataSet,".ord",sep = ""), open = "r")
l <- readLines(f)
close(f)
nOrd <- length(l)
if (nOrd > 0) {
ordmap <- strsplit(l, " ")
ordidx <- rep(0, nOrd)
for (i in 1:nOrd) {
ordidx[i] <- as.integer(ordmap[[i]][1]) + 1
}
} else {
ordidx <- NULL
}
f <- file(paste(inPath,"label/",dataSet,".label",sep = ""), open = "r")
l <- readLines(f, n = 1)
close(f)
if (length(l) > 0) {
labelidx <- lapply(strsplit(l, ","), as.integer)[[1]] + 1
} else {
labelidx <- NULL
}
f <- file(paste(inPath,"remove/",dataSet,".remove",sep = ""), open = "r")
l <- readLines(f, n = 1)
close(f)
if (length(l) > 0) {
removeidx <- lapply(strsplit(l, ","), as.integer)[[1]] + 1
} else {
removeidx <- NULL
}
# specify data type for each column
colClass <- rep("numeric", nCols)
colClass[binidx] <- "factor"
colClass[catidx] <- "factor"
colClass[ordidx] <- "factor"
colClass[labelidx] <- "factor"
colClass[removeidx] <- "factor"
df <- read.table(paste(inPath, "data/", dataSet, ".data", sep = ""), sep = dlm, colClasses = colClass, na.strings = missing)
metadata <- list()
metadata$nominal <- c(binidx,catidx)
if (!is.null(metadata$nominal)) {
metadata$nominal <- sort(metadata$nominal)
}
metadata$label <- labelidx
metadata$ordinal <- ordmap
metadata$remove <- removeidx
save(df, metadata, file = paste(outPath,dataSet,".RData",sep = ""))
if (istest) {
df <- read.table(paste(inPath, "data/", dataSet, ".test.data", sep = ""), sep = dlm, colClasses = colClass, na.strings = missing)
save(df, metadata, file = paste(outPath,dataSet,".test.RData",sep = ""))
}
}
dataSet
nCols
binidx
catidx
df <- read.table(paste(inPath, "data/", dataSet, ".data", sep = ""), sep = dlm, colClasses = colClass, na.strings = missing)
metadata
ordmap
istest
df <- read.table(paste(inPath, "data/", dataSet, ".test.data", sep = ""), sep = dlm, colClasses = colClass, na.strings = missing)
set.seed(123)
# con <- file(inFile, open="r")
inPath <- "/Users/tyler/Benchmarks/Data/uci/"
outPath <- "/Users/tyler/Benchmarks/Data/uci/RData/"
contents.all <- list.files(paste(inPath,"data/",sep = ""))
contents.notest <- contents.all[!grepl(".test",contents.all)]
# loop through datasets
for (fileName in contents.notest) {
dataSet <- strsplit(fileName,"\\.")[[1]][1]
print(dataSet)
f <- file(paste(inPath,"missing/",dataSet,".missing",sep = ""), open = "r")
missing <- readLines(f, n = 1)
close(f)
if (paste(dataSet,".test.data",sep = "") %in% contents.all) {
istest <- T
} else{
istest <- F
}
f <- file(paste(inPath, "data/", dataSet, ".data", sep = ""), open = "r")
l <- readLines(f, n = 1)
close(f)
nCols <- length(strsplit(l, ",")[[1]])
f <- file(paste(inPath,"delimiter/",dataSet,".delimiter",sep = ""), open = "r")
dlm <- readLines(f, n = 1)
close(f)
if (dlm == "\\t") {
dlm <- "\t"
}
f <- file(paste(inPath,"binary/",dataSet,".bin",sep = ""), open = "r")
l <- readLines(f, n = 1)
close(f)
if (length(l) > 0) {
binidx <- lapply(strsplit(l, ","), as.integer)[[1]] + 1
} else {
binidx <- NULL
}
f <- file(paste(inPath,"categorical/",dataSet,".cat",sep = ""), open = "r")
l <- readLines(f, n = 1)
close(f)
if (length(l) > 0) {
catidx <- lapply(strsplit(l, ","), as.integer)[[1]] + 1
} else {
catidx <- NULL
}
f <- file(paste(inPath,"ordinal/",dataSet,".ord",sep = ""), open = "r")
l <- readLines(f)
close(f)
nOrd <- length(l)
if (nOrd > 0) {
ordmap <- strsplit(l, " ")
ordidx <- rep(0, nOrd)
for (i in 1:nOrd) {
ordidx[i] <- as.integer(ordmap[[i]][1]) + 1
}
} else {
ordidx <- NULL
ordmap <- NULL
}
f <- file(paste(inPath,"label/",dataSet,".label",sep = ""), open = "r")
l <- readLines(f, n = 1)
close(f)
if (length(l) > 0) {
labelidx <- lapply(strsplit(l, ","), as.integer)[[1]] + 1
} else {
labelidx <- NULL
}
f <- file(paste(inPath,"remove/",dataSet,".remove",sep = ""), open = "r")
l <- readLines(f, n = 1)
close(f)
if (length(l) > 0) {
removeidx <- lapply(strsplit(l, ","), as.integer)[[1]] + 1
} else {
removeidx <- NULL
}
# specify data type for each column
colClass <- rep("numeric", nCols)
colClass[binidx] <- "factor"
colClass[catidx] <- "factor"
colClass[ordidx] <- "factor"
colClass[labelidx] <- "factor"
colClass[removeidx] <- "factor"
df <- read.table(paste(inPath, "data/", dataSet, ".data", sep = ""), sep = dlm, colClasses = colClass, na.strings = missing)
metadata <- list()
metadata$nominal <- c(binidx,catidx)
if (!is.null(metadata$nominal)) {
metadata$nominal <- sort(metadata$nominal)
}
metadata$label <- labelidx
metadata$ordinal <- ordmap
metadata$remove <- removeidx
save(df, metadata, file = paste(outPath,dataSet,".RData",sep = ""))
if (istest) {
df <- read.table(paste(inPath, "data/", dataSet, ".test.data", sep = ""), sep = dlm, colClasses = colClass, na.strings = missing)
save(df, metadata, file = paste(outPath,dataSet,".test.RData",sep = ""))
}
}
ordmap
dlm
nCol
nCols
labelidx
set.seed(123)
# con <- file(inFile, open="r")
inPath <- "/Users/tyler/Benchmarks/Data/uci/"
outPath <- "/Users/tyler/Benchmarks/Data/uci/RData/"
contents.all <- list.files(paste(inPath,"data/",sep = ""))
contents.notest <- contents.all[!grepl(".test",contents.all)]
# loop through datasets
for (fileName in contents.notest) {
dataSet <- strsplit(fileName,"\\.")[[1]][1]
print(dataSet)
f <- file(paste(inPath,"missing/",dataSet,".missing",sep = ""), open = "r")
missing <- readLines(f, n = 1)
close(f)
if (paste(dataSet,".test.data",sep = "") %in% contents.all) {
istest <- T
} else{
istest <- F
}
f <- file(paste(inPath, "data/", dataSet, ".data", sep = ""), open = "r")
l <- readLines(f, n = 1)
close(f)
nCols <- length(strsplit(l, ",")[[1]])
f <- file(paste(inPath,"delimiter/",dataSet,".delimiter",sep = ""), open = "r")
dlm <- readLines(f, n = 1)
close(f)
if (dlm == "\\t") {
dlm <- "\t"
}
f <- file(paste(inPath,"binary/",dataSet,".bin",sep = ""), open = "r")
l <- readLines(f, n = 1)
close(f)
if (length(l) > 0) {
binidx <- lapply(strsplit(l, ","), as.integer)[[1]] + 1
} else {
binidx <- NULL
}
f <- file(paste(inPath,"categorical/",dataSet,".cat",sep = ""), open = "r")
l <- readLines(f, n = 1)
close(f)
if (length(l) > 0) {
catidx <- lapply(strsplit(l, ","), as.integer)[[1]] + 1
} else {
catidx <- NULL
}
f <- file(paste(inPath,"ordinal/",dataSet,".ord",sep = ""), open = "r")
l <- readLines(f)
close(f)
nOrd <- length(l)
if (nOrd > 0) {
ordmap <- strsplit(l, " ")
ordidx <- rep(0, nOrd)
for (i in 1:nOrd) {
ordidx[i] <- as.integer(ordmap[[i]][1]) + 1
}
} else {
ordidx <- NULL
ordmap <- NULL
}
f <- file(paste(inPath,"label/",dataSet,".label",sep = ""), open = "r")
l <- readLines(f, n = 1)
close(f)
if (length(l) > 0) {
labelidx <- lapply(strsplit(l, ","), as.integer)[[1]] + 1
} else {
labelidx <- NULL
}
f <- file(paste(inPath,"remove/",dataSet,".remove",sep = ""), open = "r")
l <- readLines(f, n = 1)
close(f)
if (length(l) > 0) {
removeidx <- lapply(strsplit(l, ","), as.integer)[[1]] + 1
} else {
removeidx <- NULL
}
# specify data type for each column
colClass <- rep("numeric", nCols)
colClass[binidx] <- "factor"
colClass[catidx] <- "factor"
colClass[ordidx] <- "factor"
colClass[labelidx] <- "factor"
colClass[removeidx] <- "factor"
df <- read.table(paste(inPath, "data/", dataSet, ".data", sep = ""), sep = dlm, colClasses = colClass, na.strings = missing)
metadata <- list()
metadata$nominal <- c(binidx,catidx)
if (!is.null(metadata$nominal)) {
metadata$nominal <- sort(metadata$nominal)
}
metadata$label <- labelidx
metadata$ordinal <- ordmap
metadata$remove <- removeidx
save(df, metadata, file = paste(outPath,dataSet,".RData",sep = ""))
if (istest) {
df <- read.table(paste(inPath, "data/", dataSet, ".test.data", sep = ""), sep = dlm, colClasses = colClass, na.strings = missing)
save(df, metadata, file = paste(outPath,dataSet,".test.RData",sep = ""))
}
}
ordmap
binidx
catidx
remove
removeidx
labelidx
nCols
istest
set.seed(123)
# con <- file(inFile, open="r")
inPath <- "/Users/tyler/Benchmarks/Data/uci/"
outPath <- "/Users/tyler/Benchmarks/Data/uci/RData/"
contents.all <- list.files(paste(inPath,"data/",sep = ""))
contents.notest <- contents.all[!grepl(".test",contents.all)]
# loop through datasets
for (fileName in contents.notest) {
dataSet <- strsplit(fileName,"\\.")[[1]][1]
print(dataSet)
f <- file(paste(inPath,"missing/",dataSet,".missing",sep = ""), open = "r")
missing <- readLines(f, n = 1)
close(f)
if (paste(dataSet,".test.data",sep = "") %in% contents.all) {
istest <- T
} else{
istest <- F
}
f <- file(paste(inPath, "data/", dataSet, ".data", sep = ""), open = "r")
l <- readLines(f, n = 1)
close(f)
nCols <- length(strsplit(l, ",")[[1]])
f <- file(paste(inPath,"delimiter/",dataSet,".delimiter",sep = ""), open = "r")
dlm <- readLines(f, n = 1)
close(f)
if (dlm == "\\t") {
dlm <- "\t"
}
f <- file(paste(inPath,"binary/",dataSet,".bin",sep = ""), open = "r")
l <- readLines(f, n = 1)
close(f)
if (length(l) > 0) {
binidx <- lapply(strsplit(l, ","), as.integer)[[1]] + 1
} else {
binidx <- NULL
}
f <- file(paste(inPath,"categorical/",dataSet,".cat",sep = ""), open = "r")
l <- readLines(f, n = 1)
close(f)
if (length(l) > 0) {
catidx <- lapply(strsplit(l, ","), as.integer)[[1]] + 1
} else {
catidx <- NULL
}
f <- file(paste(inPath,"ordinal/",dataSet,".ord",sep = ""), open = "r")
l <- readLines(f)
close(f)
nOrd <- length(l)
if (nOrd > 0) {
ordmap <- strsplit(l, " ")
ordidx <- rep(0, nOrd)
for (i in 1:nOrd) {
ordidx[i] <- as.integer(ordmap[[i]][1]) + 1
}
} else {
ordidx <- NULL
ordmap <- NULL
}
f <- file(paste(inPath,"label/",dataSet,".label",sep = ""), open = "r")
l <- readLines(f, n = 1)
close(f)
if (length(l) > 0) {
labelidx <- lapply(strsplit(l, ","), as.integer)[[1]] + 1
} else {
labelidx <- NULL
}
f <- file(paste(inPath,"remove/",dataSet,".remove",sep = ""), open = "r")
l <- readLines(f, n = 1)
close(f)
if (length(l) > 0) {
removeidx <- lapply(strsplit(l, ","), as.integer)[[1]] + 1
} else {
removeidx <- NULL
}
# specify data type for each column
colClass <- rep("numeric", nCols)
colClass[binidx] <- "factor"
colClass[catidx] <- "factor"
colClass[ordidx] <- "factor"
colClass[labelidx] <- "factor"
colClass[removeidx] <- "factor"
df <- read.table(paste(inPath, "data/", dataSet, ".data", sep = ""), sep = dlm, colClasses = colClass, na.strings = missing)
metadata <- list()
metadata$nominal <- c(binidx,catidx)
if (!is.null(metadata$nominal)) {
metadata$nominal <- sort(metadata$nominal)
}
metadata$label <- labelidx
metadata$ordinal <- ordmap
metadata$remove <- removeidx
save(df, metadata, file = paste(outPath,dataSet,".RData",sep = ""))
if (istest) {
df <- read.table(paste(inPath, "data/", dataSet, ".test.data", sep = ""), sep = dlm, colClasses = colClass, na.strings = missing)
save(df, metadata, file = paste(outPath,dataSet,".test.RData",sep = ""))
}
}
setwd("/Users/tyler")
ls()
dir()
install.packages(rmarkdown)
install.packages("rmarkdown")
seq(1,2,0.1)
file.edit("~/RerF/Code/Experiments/2017.09.23/run_Benchmarks_2017_09_23.R")
file.edit("~/R-RerF/R/OOBPredict.R")
file.edit("~/R-RerF/R/Predict.R")
file.edit("~/R-RerF/R/ComputeSimilarity.R")
file.edit("~/R-RerF/R/RerF.R")
file.edit("~/R-RerF/R/RandMatCat.R")
file.edit("~/R-RerF/R/RandMat.R")
file.edit("~/R-RerF/R/RerF.R")
setwd("~/RerF/Code/Utils/")
file.edit("GetFolds.R")
file.edit("RerFEval.R")
file.edit("~/R-RerF/R/BuildTree.R")
getwd()
file.edit("../Experiments/2017.09.23/run_Benchmarks_2017_09_23.R")
file.edit("~/R-RerF/R/RunOOB.R")
file.edit("~/R-RerF/R/BuildTree.R")
getwd()
file.edit("FeatureImportance.R")
file.edit("~/R-RerF/R/RerF.R")
file.edit("~/R-RerF/R/Predict.R")
file.edit("~/RandomerForest/R/Code/Plots/plot_benchmarks_2017_09_23.R")
data.frame
data.frame()
data.frame(ncol = 10L)
data.frame(ncol = NULL)
df <- data.frame()
df$a <- c(1,2)
